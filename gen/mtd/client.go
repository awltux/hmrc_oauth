// Code generated by goa v3.0.2, DO NOT EDIT.
//
// mtd client
//
// Command:
// $ goa gen github.com/awltux/hmrc_oauth/design

package mtd

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "mtd" service client.
type Client struct {
	RegisterEndpoint     goa.Endpoint
	RetrieveEndpoint     goa.Endpoint
	HmrcCallbackEndpoint goa.Endpoint
}

// NewClient initializes a "mtd" service client given the endpoints.
func NewClient(register, retrieve, hmrcCallback goa.Endpoint) *Client {
	return &Client{
		RegisterEndpoint:     register,
		RetrieveEndpoint:     retrieve,
		HmrcCallbackEndpoint: hmrcCallback,
	}
}

// Register calls the "register" endpoint of the "mtd" service.
func (c *Client) Register(ctx context.Context, p *StatePayload) (err error) {
	_, err = c.RegisterEndpoint(ctx, p)
	return
}

// Retrieve calls the "retrieve" endpoint of the "mtd" service.
func (c *Client) Retrieve(ctx context.Context, p *StatePayload) (res string, err error) {
	var ires interface{}
	ires, err = c.RetrieveEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// HmrcCallback calls the "hmrc_callback" endpoint of the "mtd" service.
func (c *Client) HmrcCallback(ctx context.Context, p *CodePayload) (err error) {
	_, err = c.HmrcCallbackEndpoint(ctx, p)
	return
}
